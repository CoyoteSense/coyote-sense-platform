<?xml version="1.0" encoding="utf-8"?>
<TestRun id="61e5a8e9-1342-493a-817a-78bad400d815" name="dobri@DEMANTUR 2025-06-03 17:19:59" runUser="DEMANTUR\dobri" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-06-03T17:19:59.2099788+03:00" queuing="2025-06-03T17:19:59.2099795+03:00" start="2025-06-03T17:19:57.0464024+03:00" finish="2025-06-03T17:19:59.7753416+03:00" />
  <TestSettings name="default" id="b68ec27e-fce7-4e6e-8b31-3f06cf9861a7">
    <Deployment runDeploymentRoot="dobri_DEMANTUR_2025-06-03_17_19_59" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="dbe2057a-1cae-4ed7-be59-7fe9cc4b4be5" testId="05d7606a-9a75-0816-2a79-da2e2d08f317" testName="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.State_ShouldGenerateSecureRandomValue" computerName="DEMANTUR" duration="00:00:00.0991950" startTime="2025-06-03T17:19:59.4516762+03:00" endTime="2025-06-03T17:19:59.4516767+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dbe2057a-1cae-4ed7-be59-7fe9cc4b4be5" />
    <UnitTestResult executionId="0cc7a8a5-2811-4562-b245-d8683215b350" testId="d105e032-6f0c-639b-23c4-991f0a584a87" testName="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.TokenStorage_ShouldClearTokensOnDispose" computerName="DEMANTUR" duration="00:00:00.1367916" startTime="2025-06-03T17:19:58.8290440+03:00" endTime="2025-06-03T17:19:58.8290443+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0cc7a8a5-2811-4562-b245-d8683215b350">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Unable to resolve service for type 'Coyote.Infra.Http.ICoyoteHttpClient' while attempting to activate 'Coyote.Infra.Security.Auth.AuthClient'.</Message>
          <StackTrace>   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)&#xD;
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)&#xD;
   at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.TokenStorage_ShouldClearTokensOnDispose() in C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs:line 269&#xD;
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="833b55c1-18e5-4cc9-a286-c2e42f9a427c" testId="52c5c77a-bffe-4171-0685-542d0d92662b" testName="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.JwtValidation_ShouldRejectTamperedTokens" computerName="DEMANTUR" duration="00:00:00.1400806" startTime="2025-06-03T17:19:59.5937771+03:00" endTime="2025-06-03T17:19:59.5937777+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="833b55c1-18e5-4cc9-a286-c2e42f9a427c">
      <Output>
        <ErrorInfo>
          <Message>Expected introspectionResult to be false, but found True.</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)&#xD;
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)&#xD;
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)&#xD;
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)&#xD;
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)&#xD;
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)&#xD;
   at FluentAssertions.Primitives.BooleanAssertions`1.BeFalse(String because, Object[] becauseArgs)&#xD;
   at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.JwtValidation_ShouldRejectTamperedTokens() in C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs:line 182&#xD;
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d0dd2a8e-16c1-48f7-837f-f0769a6c2d84" testId="29b5c6ad-d582-c2ff-14ed-76c13b0474b5" testName="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.PKCE_ShouldGenerateSecureChallenge" computerName="DEMANTUR" duration="00:00:00.1037875" startTime="2025-06-03T17:19:59.2489075+03:00" endTime="2025-06-03T17:19:59.2489087+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d0dd2a8e-16c1-48f7-837f-f0769a6c2d84" />
    <UnitTestResult executionId="78ba9d85-a593-4810-a3a0-7e8373a56c8b" testId="1953bae3-ef6f-b754-07b9-87e70fa26fcd" testName="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.RateLimiting_ShouldPreventBruteForceAttacks" computerName="DEMANTUR" duration="00:00:00.1034803" startTime="2025-06-03T17:19:59.3542757+03:00" endTime="2025-06-03T17:19:59.3542761+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="78ba9d85-a593-4810-a3a0-7e8373a56c8b">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Unable to resolve service for type 'Coyote.Infra.Http.ICoyoteHttpClient' while attempting to activate 'Coyote.Infra.Security.Auth.AuthClient'.</Message>
          <StackTrace>   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)&#xD;
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)&#xD;
   at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.RateLimiting_ShouldPreventBruteForceAttacks() in C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs:line 307&#xD;
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="084bbd37-9bfc-4b94-a331-95db7b2dbebe" testId="be05490a-766d-1cbc-2873-d96bd2b6fd76" testName="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.AccessToken_ShouldBeStoredSecurely" computerName="DEMANTUR" duration="00:00:00.1759324" startTime="2025-06-03T17:19:59.1457962+03:00" endTime="2025-06-03T17:19:59.1457968+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="084bbd37-9bfc-4b94-a331-95db7b2dbebe">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Unable to resolve service for type 'Coyote.Infra.Http.ICoyoteHttpClient' while attempting to activate 'Coyote.Infra.Security.Auth.AuthClient'.</Message>
          <StackTrace>   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)&#xD;
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)&#xD;
   at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.AccessToken_ShouldBeStoredSecurely() in C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs:line 117&#xD;
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7e7e28d3-bcde-4031-b8df-b43c9425682a" testId="a1e032ef-0107-1450-b875-5493cbc795a7" testName="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.ClientCredentials_ShouldNotExposeSecretInLogs" computerName="DEMANTUR" duration="00:00:00.1482664" startTime="2025-06-03T17:19:58.6922722+03:00" endTime="2025-06-03T17:19:58.6922725+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7e7e28d3-bcde-4031-b8df-b43c9425682a">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Unable to resolve service for type 'Coyote.Infra.Http.ICoyoteHttpClient' while attempting to activate 'Coyote.Infra.Security.Auth.AuthClient'.</Message>
          <StackTrace>   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)&#xD;
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)&#xD;
   at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.ClientCredentials_ShouldNotExposeSecretInLogs() in C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs:line 85&#xD;
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4c16e808-fa1c-4546-9382-169d87d94ee5" testId="1f514fa9-db56-d970-76d1-3559fcb1c255" testName="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.Nonce_ShouldGenerateSecureRandomValue" computerName="DEMANTUR" duration="00:00:00.0809155" startTime="2025-06-03T17:19:59.6734668+03:00" endTime="2025-06-03T17:19:59.6734671+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4c16e808-fa1c-4546-9382-169d87d94ee5" />
    <UnitTestResult executionId="b304bba2-905d-4179-acfc-33c97c69c3f6" testId="111d808a-a71c-2250-0853-9453c5127ff0" testName="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.ExpiredToken_ShouldBeRejected" computerName="DEMANTUR" duration="00:00:00.5830564" startTime="2025-06-03T17:19:58.5479282+03:00" endTime="2025-06-03T17:19:58.5479722+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b304bba2-905d-4179-acfc-33c97c69c3f6">
      <Output>
        <ErrorInfo>
          <Message>Expected introspectionResult to be false, but found True.</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)&#xD;
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)&#xD;
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)&#xD;
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)&#xD;
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)&#xD;
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)&#xD;
   at FluentAssertions.Primitives.BooleanAssertions`1.BeFalse(String because, Object[] becauseArgs)&#xD;
   at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.ExpiredToken_ShouldBeRejected() in C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs:line 192&#xD;
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8b5479c7-4dce-43de-8a5d-4955f8011700" testId="50445130-bae9-207b-fc80-dfb6f8d52677" testName="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.InvalidCertificate_ShouldRejectConnection" computerName="DEMANTUR" duration="00:00:00.1389290" startTime="2025-06-03T17:19:58.9698418+03:00" endTime="2025-06-03T17:19:58.9698423+03:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8b5479c7-4dce-43de-8a5d-4955f8011700">
      <Output>
        <ErrorInfo>
          <Message>System.InvalidOperationException : Unable to resolve service for type 'Coyote.Infra.Http.ICoyoteHttpClient' while attempting to activate 'Coyote.Infra.Security.Auth.AuthClient'.</Message>
          <StackTrace>   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)&#xD;
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)&#xD;
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)&#xD;
   at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.InvalidCertificate_ShouldRejectConnection() in C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs:line 159&#xD;
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.Nonce_ShouldGenerateSecureRandomValue" storage="c:\coyotesense\coyote-sense-platform\platform\infra\security\tests\dotnet\bin\debug\net8.0\authclient.tests.dll" id="1f514fa9-db56-d970-76d1-3559fcb1c255">
      <Execution id="4c16e808-fa1c-4546-9382-169d87d94ee5" />
      <TestMethod codeBase="C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\bin\Debug\net8.0\AuthClient.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests" name="Nonce_ShouldGenerateSecureRandomValue" />
    </UnitTest>
    <UnitTest name="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.RateLimiting_ShouldPreventBruteForceAttacks" storage="c:\coyotesense\coyote-sense-platform\platform\infra\security\tests\dotnet\bin\debug\net8.0\authclient.tests.dll" id="1953bae3-ef6f-b754-07b9-87e70fa26fcd">
      <Execution id="78ba9d85-a593-4810-a3a0-7e8373a56c8b" />
      <TestMethod codeBase="C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\bin\Debug\net8.0\AuthClient.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests" name="RateLimiting_ShouldPreventBruteForceAttacks" />
    </UnitTest>
    <UnitTest name="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.ClientCredentials_ShouldNotExposeSecretInLogs" storage="c:\coyotesense\coyote-sense-platform\platform\infra\security\tests\dotnet\bin\debug\net8.0\authclient.tests.dll" id="a1e032ef-0107-1450-b875-5493cbc795a7">
      <Execution id="7e7e28d3-bcde-4031-b8df-b43c9425682a" />
      <TestMethod codeBase="C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\bin\Debug\net8.0\AuthClient.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests" name="ClientCredentials_ShouldNotExposeSecretInLogs" />
    </UnitTest>
    <UnitTest name="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.JwtValidation_ShouldRejectTamperedTokens" storage="c:\coyotesense\coyote-sense-platform\platform\infra\security\tests\dotnet\bin\debug\net8.0\authclient.tests.dll" id="52c5c77a-bffe-4171-0685-542d0d92662b">
      <Execution id="833b55c1-18e5-4cc9-a286-c2e42f9a427c" />
      <TestMethod codeBase="C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\bin\Debug\net8.0\AuthClient.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests" name="JwtValidation_ShouldRejectTamperedTokens" />
    </UnitTest>
    <UnitTest name="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.TokenStorage_ShouldClearTokensOnDispose" storage="c:\coyotesense\coyote-sense-platform\platform\infra\security\tests\dotnet\bin\debug\net8.0\authclient.tests.dll" id="d105e032-6f0c-639b-23c4-991f0a584a87">
      <Execution id="0cc7a8a5-2811-4562-b245-d8683215b350" />
      <TestMethod codeBase="C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\bin\Debug\net8.0\AuthClient.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests" name="TokenStorage_ShouldClearTokensOnDispose" />
    </UnitTest>
    <UnitTest name="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.PKCE_ShouldGenerateSecureChallenge" storage="c:\coyotesense\coyote-sense-platform\platform\infra\security\tests\dotnet\bin\debug\net8.0\authclient.tests.dll" id="29b5c6ad-d582-c2ff-14ed-76c13b0474b5">
      <Execution id="d0dd2a8e-16c1-48f7-837f-f0769a6c2d84" />
      <TestMethod codeBase="C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\bin\Debug\net8.0\AuthClient.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests" name="PKCE_ShouldGenerateSecureChallenge" />
    </UnitTest>
    <UnitTest name="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.ExpiredToken_ShouldBeRejected" storage="c:\coyotesense\coyote-sense-platform\platform\infra\security\tests\dotnet\bin\debug\net8.0\authclient.tests.dll" id="111d808a-a71c-2250-0853-9453c5127ff0">
      <Execution id="b304bba2-905d-4179-acfc-33c97c69c3f6" />
      <TestMethod codeBase="C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\bin\Debug\net8.0\AuthClient.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests" name="ExpiredToken_ShouldBeRejected" />
    </UnitTest>
    <UnitTest name="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.InvalidCertificate_ShouldRejectConnection" storage="c:\coyotesense\coyote-sense-platform\platform\infra\security\tests\dotnet\bin\debug\net8.0\authclient.tests.dll" id="50445130-bae9-207b-fc80-dfb6f8d52677">
      <Execution id="8b5479c7-4dce-43de-8a5d-4955f8011700" />
      <TestMethod codeBase="C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\bin\Debug\net8.0\AuthClient.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests" name="InvalidCertificate_ShouldRejectConnection" />
    </UnitTest>
    <UnitTest name="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.AccessToken_ShouldBeStoredSecurely" storage="c:\coyotesense\coyote-sense-platform\platform\infra\security\tests\dotnet\bin\debug\net8.0\authclient.tests.dll" id="be05490a-766d-1cbc-2873-d96bd2b6fd76">
      <Execution id="084bbd37-9bfc-4b94-a331-95db7b2dbebe" />
      <TestMethod codeBase="C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\bin\Debug\net8.0\AuthClient.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests" name="AccessToken_ShouldBeStoredSecurely" />
    </UnitTest>
    <UnitTest name="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.State_ShouldGenerateSecureRandomValue" storage="c:\coyotesense\coyote-sense-platform\platform\infra\security\tests\dotnet\bin\debug\net8.0\authclient.tests.dll" id="05d7606a-9a75-0816-2a79-da2e2d08f317">
      <Execution id="dbe2057a-1cae-4ed7-be59-7fe9cc4b4be5" />
      <TestMethod codeBase="C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\bin\Debug\net8.0\AuthClient.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests" name="State_ShouldGenerateSecureRandomValue" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="05d7606a-9a75-0816-2a79-da2e2d08f317" executionId="dbe2057a-1cae-4ed7-be59-7fe9cc4b4be5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d105e032-6f0c-639b-23c4-991f0a584a87" executionId="0cc7a8a5-2811-4562-b245-d8683215b350" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="52c5c77a-bffe-4171-0685-542d0d92662b" executionId="833b55c1-18e5-4cc9-a286-c2e42f9a427c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="29b5c6ad-d582-c2ff-14ed-76c13b0474b5" executionId="d0dd2a8e-16c1-48f7-837f-f0769a6c2d84" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1953bae3-ef6f-b754-07b9-87e70fa26fcd" executionId="78ba9d85-a593-4810-a3a0-7e8373a56c8b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="be05490a-766d-1cbc-2873-d96bd2b6fd76" executionId="084bbd37-9bfc-4b94-a331-95db7b2dbebe" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a1e032ef-0107-1450-b875-5493cbc795a7" executionId="7e7e28d3-bcde-4031-b8df-b43c9425682a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1f514fa9-db56-d970-76d1-3559fcb1c255" executionId="4c16e808-fa1c-4546-9382-169d87d94ee5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="111d808a-a71c-2250-0853-9453c5127ff0" executionId="b304bba2-905d-4179-acfc-33c97c69c3f6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="50445130-bae9-207b-fc80-dfb6f8d52677" executionId="8b5479c7-4dce-43de-8a5d-4955f8011700" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="10" executed="10" passed="3" failed="7" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.5.3.1+6b60a9e56a (64-bit .NET 8.0.11)&#xD;
[xUnit.net 00:00:00.13]   Discovering: AuthClient.Tests&#xD;
[xUnit.net 00:00:00.20]   Discovered:  AuthClient.Tests&#xD;
[xUnit.net 00:00:00.21]   Starting:    AuthClient.Tests&#xD;
[MockHttpClient] ExecuteAsync called: Post http://localhost:45406/introspect&#xD;
[MockHttpClient] Checking predefined responses. Total count: 0&#xD;
[MockHttpClient] OAuth2 introspection endpoint detected: http://localhost:45406/introspect&#xD;
[xUnit.net 00:00:00.86]       Expected introspectionResult to be false, but found True.&#xD;
[xUnit.net 00:00:00.87]       Stack Trace:&#xD;
[xUnit.net 00:00:00.87]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)&#xD;
[xUnit.net 00:00:00.87]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)&#xD;
[xUnit.net 00:00:00.87]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)&#xD;
[xUnit.net 00:00:00.87]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)&#xD;
[xUnit.net 00:00:00.87]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)&#xD;
[xUnit.net 00:00:00.87]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)&#xD;
[xUnit.net 00:00:00.87]            at FluentAssertions.Primitives.BooleanAssertions`1.BeFalse(String because, Object[] becauseArgs)&#xD;
[xUnit.net 00:00:00.87]         C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs(192,0): at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.ExpiredToken_ShouldBeRejected()&#xD;
[xUnit.net 00:00:00.87]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:01.01]       System.InvalidOperationException : Unable to resolve service for type 'Coyote.Infra.Http.ICoyoteHttpClient' while attempting to activate 'Coyote.Infra.Security.Auth.AuthClient'.&#xD;
[xUnit.net 00:00:01.01]       Stack Trace:&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)&#xD;
[xUnit.net 00:00:01.01]            at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)&#xD;
[xUnit.net 00:00:01.01]            at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)&#xD;
[xUnit.net 00:00:01.01]         C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs(85,0): at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.ClientCredentials_ShouldNotExposeSecretInLogs()&#xD;
[xUnit.net 00:00:01.01]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:01.15]       System.InvalidOperationException : Unable to resolve service for type 'Coyote.Infra.Http.ICoyoteHttpClient' while attempting to activate 'Coyote.Infra.Security.Auth.AuthClient'.&#xD;
[xUnit.net 00:00:01.15]       Stack Trace:&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)&#xD;
[xUnit.net 00:00:01.15]            at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)&#xD;
[xUnit.net 00:00:01.15]            at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)&#xD;
[xUnit.net 00:00:01.15]         C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs(269,0): at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.TokenStorage_ShouldClearTokensOnDispose()&#xD;
[xUnit.net 00:00:01.15]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:01.29]       System.InvalidOperationException : Unable to resolve service for type 'Coyote.Infra.Http.ICoyoteHttpClient' while attempting to activate 'Coyote.Infra.Security.Auth.AuthClient'.&#xD;
[xUnit.net 00:00:01.29]       Stack Trace:&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)&#xD;
[xUnit.net 00:00:01.29]            at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)&#xD;
[xUnit.net 00:00:01.29]            at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)&#xD;
[xUnit.net 00:00:01.29]         C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs(159,0): at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.InvalidCertificate_ShouldRejectConnection()&#xD;
[xUnit.net 00:00:01.29]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:01.47]       System.InvalidOperationException : Unable to resolve service for type 'Coyote.Infra.Http.ICoyoteHttpClient' while attempting to activate 'Coyote.Infra.Security.Auth.AuthClient'.&#xD;
[xUnit.net 00:00:01.47]       Stack Trace:&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)&#xD;
[xUnit.net 00:00:01.47]            at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)&#xD;
[xUnit.net 00:00:01.47]            at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)&#xD;
[xUnit.net 00:00:01.47]         C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs(117,0): at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.AccessToken_ShouldBeStoredSecurely()&#xD;
[xUnit.net 00:00:01.47]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:01.67]       System.InvalidOperationException : Unable to resolve service for type 'Coyote.Infra.Http.ICoyoteHttpClient' while attempting to activate 'Coyote.Infra.Security.Auth.AuthClient'.&#xD;
[xUnit.net 00:00:01.67]       Stack Trace:&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(ResultCache lifetime, ServiceIdentifier serviceIdentifier, Type implementationType, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain, Int32 slot)&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.GetCallSite(ServiceIdentifier serviceIdentifier, CallSiteChain callSiteChain)&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(ServiceIdentifier serviceIdentifier)&#xD;
[xUnit.net 00:00:01.67]            at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)&#xD;
[xUnit.net 00:00:01.67]            at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)&#xD;
[xUnit.net 00:00:01.67]         C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs(307,0): at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.RateLimiting_ShouldPreventBruteForceAttacks()&#xD;
[xUnit.net 00:00:01.68]         --- End of stack trace from previous location ---&#xD;
[MockHttpClient] ExecuteAsync called: Post http://localhost:45414/token&#xD;
[MockHttpClient] Checking predefined responses. Total count: 0&#xD;
[MockHttpClient] OAuth2 token endpoint detected: http://localhost:45414/token&#xD;
[MockHttpClient] ExecuteAsync called: Post http://localhost:45414/introspect&#xD;
[MockHttpClient] Checking predefined responses. Total count: 0&#xD;
[MockHttpClient] OAuth2 introspection endpoint detected: http://localhost:45414/introspect&#xD;
[xUnit.net 00:00:01.91]       Expected introspectionResult to be false, but found True.&#xD;
[xUnit.net 00:00:01.91]       Stack Trace:&#xD;
[xUnit.net 00:00:01.91]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)&#xD;
[xUnit.net 00:00:01.91]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)&#xD;
[xUnit.net 00:00:01.91]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)&#xD;
[xUnit.net 00:00:01.91]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)&#xD;
[xUnit.net 00:00:01.91]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)&#xD;
[xUnit.net 00:00:01.91]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)&#xD;
[xUnit.net 00:00:01.91]            at FluentAssertions.Primitives.BooleanAssertions`1.BeFalse(String because, Object[] becauseArgs)&#xD;
[xUnit.net 00:00:01.91]         C:\CoyoteSense\coyote-sense-platform\Platform\infra\security\tests\dotnet\Security\AuthSecurityTests.cs(182,0): at CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.JwtValidation_ShouldRejectTamperedTokens()&#xD;
[xUnit.net 00:00:01.91]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:02.00]   Finished:    AuthClient.Tests&#xD;
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="DEMANTUR" outcome="Error" timestamp="2025-06-03T17:19:58.5434934+03:00">
        <Text>[xUnit.net 00:00:00.86]     CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.ExpiredToken_ShouldBeRejected [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DEMANTUR" outcome="Error" timestamp="2025-06-03T17:19:58.6908076+03:00">
        <Text>[xUnit.net 00:00:01.01]     CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.ClientCredentials_ShouldNotExposeSecretInLogs [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DEMANTUR" outcome="Error" timestamp="2025-06-03T17:19:58.8276992+03:00">
        <Text>[xUnit.net 00:00:01.15]     CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.TokenStorage_ShouldClearTokensOnDispose [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DEMANTUR" outcome="Error" timestamp="2025-06-03T17:19:58.9674714+03:00">
        <Text>[xUnit.net 00:00:01.29]     CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.InvalidCertificate_ShouldRejectConnection [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DEMANTUR" outcome="Error" timestamp="2025-06-03T17:19:59.2371885+03:00">
        <Text>[xUnit.net 00:00:01.46]     CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.AccessToken_ShouldBeStoredSecurely [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DEMANTUR" outcome="Error" timestamp="2025-06-03T17:19:59.3528807+03:00">
        <Text>[xUnit.net 00:00:01.67]     CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.RateLimiting_ShouldPreventBruteForceAttacks [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="DEMANTUR" outcome="Error" timestamp="2025-06-03T17:19:59.5929774+03:00">
        <Text>[xUnit.net 00:00:01.91]     CoyoteSense.OAuth2.Client.Tests.Security.AuthSecurityTests.JwtValidation_ShouldRejectTamperedTokens [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>